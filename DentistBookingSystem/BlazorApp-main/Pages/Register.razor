@page "/register"
@inject IRegisterService RegisterService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<div class="col-md-8 offset-md-2 mt-5">
    <div class="card">
        <h4 class="card-header">Registration</h4>
        <div class="card-body">
<div class="row">
    <div class="col-md-12">
        <EditForm Model=@user OnValidSubmit="@CreateUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="Name">Name</label>
                <InputText @bind-Value=user.Name class="form-control" id="Name" />
                <ValidationMessage For=@( () => user.Name ) />
            </div>
            <div class="form-group">
                <label for="Surname">Surname</label>
                <InputText @bind-Value=user.Surname class="form-control" id="Surname" />
                <ValidationMessage For=@( () => user.Surname ) />
            </div>

            <div class="form-group">
                <label for="BirthDate">Date of birth</label>
                <InputDate @bind-Value=user.BirthDate class="form-control" id="BirthDate" />
                <ValidationMessage For=@( () => user.BirthDate ) />
            </div>

            <div class="form-group">
                <label for="Email">Email</label>
                <InputText type="email" @bind-Value=user.Email class="form-control" id="Email" />
                <ValidationMessage For=@( () => user.Email ) />
            </div>

            <div class="form-group">
                <label for="Password">Password</label>
                <InputText type="password" @bind-Value=user.Password class="form-control" id="Password" />
                <ValidationMessage For=@( () => user.Password) />
            </div>
            <div class="form-group">
                <label for="Password">Confirm Password</label>
                <InputText type="password" @bind-Value=user.ConfirmPassword class="form-control" id="ConfirmPassword" />
                <ValidationMessage For=@( () => user.ConfirmPassword) />
            </div>

            <div class="form-group">
                <label for="Phone">Telephone number</label>
                <InputText type="tel" @bind-Value=user.PhoneNumber class="form-control" id="PhoneNumber" />
                <ValidationMessage For=@( () => user.PhoneNumber ) />
            </div>


            <div class="form-group">
                <InputSelect @bind-Value=user.Gender class="form-control">
                    <option selected>Choose Gender</option>
                    <option value="Female">Female</option>
                    <option value="Male">Male</option>
                </InputSelect>
                <ValidationMessage For=@( () => user.Gender ) />

            </div>

            <input type="hidden" @bind-value="@user.Id" />

            <div class="form-group">
                <button type="submit" class="btn btn-primary" @onclick="() => CreateUser()">Register</button>
                <button type="button" class="btn btn-danger" @onclick="() => cancel()">Cancel</button>
            </div>
        </EditForm>
</div>
</div>
</div>
</div>
</div>

@code {


    User user = new User();

    protected async Task CreateUser()
    {
        await RegisterService.Create(user);

        navigationManager.NavigateTo("/index");

    }

    void cancel()
    {
        navigationManager.NavigateTo("/index");
    }

}