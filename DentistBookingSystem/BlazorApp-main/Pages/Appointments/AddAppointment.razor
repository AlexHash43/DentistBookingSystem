@page "/addAppointment"
@attribute [Authorize(Roles = "Administrator, Recepcjonist")]
@inject IAppointmentsService AppointmentsService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
<h1>
    Add Appointment
</h1>
<!-----TO DO TIME SLOTS -->
<div class="row">
    <div class="col-md-5">
        <form>
            <div class="form-group">
                <div class="form-group d-grid gap-4">
                    <div class="p-2 bg-light border">
                        <label for="TimeStart" class="control-label">Time Start</label>
                        <input type="datetime-local" for="Number" class="form-control" @bind-value="@appointment.TimeStart" id="TimeStart" />
                    </div>
                    <br />
                    <div class="p-2 bg-light border">
                        <label for="TimeStop" class="control-label">Time Stop</label>
                        <input type="datetime-local" for="Number" class="form-control" @bind-value="@appointment.TimeStop" id="TimeStop" />
                    </div>



                    <label for="Number" class="control-label">User ID</label>
                    <input type="number" for="Number" class="form-control" @bind-value="@appointment.UserId" />

                    <input type="hidden" @bind-value="@appointment.Id" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary" @onclick="() => CreateAppointment()">Save</button>
                    <button type="button" class="btn btn-danger" @onclick="() => cancel()">Cancel</button>
                </div>
            </div>
        </form>
    </div>
</div>


@code {

    Appointment appointment = new Appointment();

    protected async Task CreateAppointment()
    {
        await AppointmentsService.Create(appointment);
        navigationManager.NavigateTo("/freeAppointments");
    }

    void cancel()
    {
        navigationManager.NavigateTo("/appointments");
    } }