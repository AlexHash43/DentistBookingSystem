@page "/appointments"
@attribute [Authorize]
@inject IAppointmentsService AppointmentsService

<div>
    <a class="btn btn-primary" href='/addAppointment'>Add</a>
</div>

<div class="card mt-4">
    <h4 class="card-header">Appointments</h4>
    <div class="card-body">
        <h6>Appointments from secure api end point</h6>
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        @if (appointments != null)
        {
        <ul>
    @foreach (var appointment in appointments)
    {
    <tr>
        <td>@appointment.Id</td>
        <td>@appointment.Date</td>
        <td>@appointment.TimeStart</td>
        <td>@appointment.TimeStop</td>
        <td>@appointment.Reason</td>
        <td>@appointment.Note</td>
        <td>@appointment.StatusBooked</td>
        <td>@appointment.TimeAndDateBooked</td>
        <td>
            <a class="btn btn-primary" href='/appointments/@appointment.Id'>Edit</a>  |
            <a class="btn btn-danger" @onclick="() => DeleteAppointment(appointment.Id)">Delete</a>
        </td>
    </tr>                }
</ul>}
    </div>
</div>

@code { private bool loading;
            private IEnumerable<Appointment> appointments;

            protected override async Task OnInitializedAsync()
            {
                loading = true;
                appointments = await AppointmentsService.GetAll();
                loading = false;
            }

            protected async Task DeleteAppointment(int id)
            {
                await AppointmentsService.Delete(id);
                appointments = await AppointmentsService.GetAll();
            } }